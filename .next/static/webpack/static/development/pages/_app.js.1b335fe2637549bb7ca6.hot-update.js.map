{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.1b335fe2637549bb7ca6.hot-update.js","sources":["webpack:///./saga/clockSaga.js"],"sourcesContent":["import * as types from '../action/types'\r\nimport {all, delay, put, take, takeLatest } from 'redux-saga/effects'\r\nimport {tickClock} from '../action/clockAction'\r\nimport Axios from 'axios'\r\nimport * as action from '../action/clockAction'\r\n\r\nfunction* runClockSaga(){\r\n    yield take(types.START_CLOCK)\r\n    while(true) {\r\n        yield put(tickClock(true))\r\n        yield delay(1000)\r\n    }\r\n}\r\nfunction* loadDataSaga() {\r\n    try {\r\n        const res = yield Axios.get('https://jsonplaceholder.typicode.com/users')\r\n        console.log(res);\r\n        const {data} = res\r\n        yield put(action.loadDataSagaSuccess(data))\r\n    } catch (err) {\r\n        yield put(action.loadDataSagaErr(err))\r\n        \r\n    }\r\n}\r\nfunction* wathGetDataSaga(){\r\n    yield all([\r\n        call(runClockSaga),\r\n        takeLatest(types.LOAD_DATASAGA, loadDataSaga)\r\n    ])\r\n}\r\nexport default wathGetDataSaga"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAMA;;;AAOA;;;AAWA;AACA;AAzBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAIA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AACA;AACA;AAJA;AAKA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}