{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../action/types';\nvar initialState = {\n  lastUpdate: 0,\n  light: false\n};\nexport default function clockReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // console.log('action :',action);\n  switch (action.type) {\n    case types.TICK_CLOCK:\n      return _objectSpread({}, state, {}, {\n        lastUpdate: action.ts,\n        light: action.light\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/reducer/clockReducer.js"],"names":["types","initialState","lastUpdate","light","clockReducer","state","action","type","TICK_CLOCK","ts"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,iBAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CADK;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,eAAe,SAASC,YAAT,GAAiD;AAAA,MAA1BC,KAA0B,uEAApBJ,YAAoB;AAAA,MAAPK,MAAO;;AAC5D;AAEA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,KAAK,CAACQ,UAAX;AACE,+BACOH,KADP,MAEO;AAACH,QAAAA,UAAU,EAAEI,MAAM,CAACG,EAApB;AAAwBN,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAAtC,OAFP;;AAIF;AACI,aAAOE,KAAP;AAPR;AASH","sourcesContent":["import * as types from '../action/types'\r\n\r\nconst initialState = {\r\n    lastUpdate: 0,\r\n    light: false\r\n}\r\n\r\nexport default function clockReducer (state=initialState,action){\r\n    // console.log('action :',action);\r\n    \r\n    switch (action.type) {\r\n        case types.TICK_CLOCK:\r\n          return {\r\n              ...state,\r\n              ...{lastUpdate: action.ts, light: action.light}\r\n          }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}