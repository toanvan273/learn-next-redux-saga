{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducer/rootReducer';\nimport rootSaga from '../saga/rootSaga';\n\nconst bindMiddleware = middleware => {\n  if (true) {\n    const {\n      composeWithDevTools\n    } = require('redux-devtools-extension');\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(initialSate) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialSate, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/lib/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootReducer","rootSaga","bindMiddleware","middleware","composeWithDevTools","require","configureStore","initialSate","sagaMiddleware","store","sagaTask","run"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,cAAc,GAAGC,UAAU,IAAI;AACjC,YAAyC;AACrC,UAAM;AAACC,MAAAA;AAAD,QAAwBC,OAAO,CAAC,0BAAD,CAArC;;AACA,WAAOD,mBAAmB,CAACP,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAA1B;AACH;;AACD,SAAON,eAAe,CAAC,GAAGM,UAAJ,CAAtB;AACH,CAND;;AAOA,SAASG,cAAT,CAAwBC,WAAxB,EAAqC;AACjC,QAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AACA,QAAMU,KAAK,GAAGX,WAAW,CACrBE,WADqB,EAErBO,WAFqB,EAGrBL,cAAc,CAAC,CAACM,cAAD,CAAD,CAHO,CAAzB;AAKAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBV,QAAnB,CAAjB;AACA,SAAOQ,KAAP;AACH;;AACD,eAAeH,cAAf","sourcesContent":["import {applyMiddleware, createStore} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootReducer from '../reducer/rootReducer'\r\nimport rootSaga from '../saga/rootSaga'\r\n\r\nconst bindMiddleware = middleware => {\r\n    if(process.env.NODE_ENV !== 'production'){\r\n        const {composeWithDevTools} = require('redux-devtools-extension')\r\n        return composeWithDevTools(applyMiddleware(...middleware))\r\n    }\r\n    return applyMiddleware(...middleware)\r\n}\r\nfunction configureStore(initialSate) {\r\n    const sagaMiddleware = createSagaMiddleware()\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialSate,\r\n        bindMiddleware([sagaMiddleware])\r\n    )\r\n    store.sagaTask = sagaMiddleware.run(rootSaga)\r\n    return store\r\n}\r\nexport default configureStore"]},"metadata":{},"sourceType":"module"}