{"ast":null,"code":"import { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport nextReduxWrapper from 'next-redux-wrapper';\nimport nextReduxSaga from 'next-redux-saga';\nimport rootReducer from '../reducer/rootReducer';\nimport rootSaga from '../saga/rootSaga';\nvar sagaMiddleware = createSagaMiddleware();\nexport function configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\nexport default function (BaseComponent) {\n  return nextReduxWrapper(configureStore)(nextReduxSaga(BaseComponent));\n}","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/lib/withReduxSaga.js"],"names":["composeWithDevTools","createStore","applyMiddleware","createSagaMiddleware","nextReduxWrapper","nextReduxSaga","rootReducer","rootSaga","sagaMiddleware","configureStore","initialState","store","sagaTask","run","BaseComponent"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,OAAO,SAASM,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAC9C,MAAMC,KAAK,GAAGV,WAAW,CACrBK,WADqB,EAErBI,YAFqB,EAGrBV,mBAAmB,CAACE,eAAe,CAACM,cAAD,CAAhB,CAHE,CAAzB;AAKAG,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBN,QAAnB,CAAjB;AACA,SAAOI,KAAP;AACH;AACD,eAAe,UAASG,aAAT,EAAuB;AAClC,SAAOV,gBAAgB,CAACK,cAAD,CAAhB,CAAiCJ,aAAa,CAACS,aAAD,CAA9C,CAAP;AACH","sourcesContent":["import { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport nextReduxWrapper from 'next-redux-wrapper'\r\nimport nextReduxSaga from 'next-redux-saga'\r\n\r\nimport rootReducer from '../reducer/rootReducer'\r\nimport rootSaga from '../saga/rootSaga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport function configureStore(initialState = {}) {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n    )\r\n    store.sagaTask = sagaMiddleware.run(rootSaga)\r\n    return store\r\n}\r\nexport default function(BaseComponent){\r\n    return nextReduxWrapper(configureStore)(nextReduxSaga(BaseComponent))\r\n}"]},"metadata":{},"sourceType":"module"}