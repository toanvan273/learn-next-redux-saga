{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(runClockSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadDataSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(wathGetDataSaga);\n\nimport * as types from '../action/types';\nimport { all, delay, put, take, takeLatest } from 'redux-saga/effects';\nimport { tickClock } from '../action/clockAction';\nimport Axios from 'axios';\nimport * as action from '../action/clockAction';\n\nfunction runClockSaga() {\n  return _regeneratorRuntime.wrap(function runClockSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return take(types.START_CLOCK);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction loadDataSaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadDataSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return Axios.get('https://jsonplaceholder.typicode.com/users');\n\n        case 3:\n          res = _context2.sent;\n          console.log(res);\n          data = res.data;\n          _context2.next = 8;\n          return put(action.loadDataSagaSuccess(data));\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put(action.loadDataSagaErr(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction wathGetDataSaga() {\n  return _regeneratorRuntime.wrap(function wathGetDataSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([call(runClockSaga), takeLatest(types.LOAD_DATASAGA, loadDataSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default wathGetDataSaga;","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/saga/clockSaga.js"],"names":["runClockSaga","loadDataSaga","wathGetDataSaga","types","all","delay","put","take","takeLatest","tickClock","Axios","action","START_CLOCK","get","res","console","log","data","loadDataSagaSuccess","loadDataSagaErr","call","LOAD_DATASAGA"],"mappings":";;;;yBAMUA,Y;;;yBAOAC,Y;;;yBAWAC,e;;AAxBV,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AACA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;;AAEA,SAAUX,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,IAAI,CAACJ,KAAK,CAACS,WAAP,CAAV;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUX,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEoB,iBAAMS,KAAK,CAACG,GAAN,CAAU,4CAAV,CAAN;;AAFpB;AAEcC,UAAAA,GAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACOG,UAAAA,IAJf,GAIuBH,GAJvB,CAIeG,IAJf;AAAA;AAKQ,iBAAMX,GAAG,CAACK,MAAM,CAACO,mBAAP,CAA2BD,IAA3B,CAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOQ,iBAAMX,GAAG,CAACK,MAAM,CAACQ,eAAP,cAAD,CAAT;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUjB,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAME,GAAG,CAAC,CACNgB,IAAI,CAACpB,YAAD,CADE,EAENQ,UAAU,CAACL,KAAK,CAACkB,aAAP,EAAsBpB,YAAtB,CAFJ,CAAD,CAAT;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeC,eAAf","sourcesContent":["import * as types from '../action/types'\r\nimport {all, delay, put, take, takeLatest } from 'redux-saga/effects'\r\nimport {tickClock} from '../action/clockAction'\r\nimport Axios from 'axios'\r\nimport * as action from '../action/clockAction'\r\n\r\nfunction* runClockSaga(){\r\n    yield take(types.START_CLOCK)\r\n    // while(true) {\r\n    //     yield put(tickClock(true))\r\n    //     yield delay(1000)\r\n    // }\r\n}\r\nfunction* loadDataSaga() {\r\n    try {\r\n        const res = yield Axios.get('https://jsonplaceholder.typicode.com/users')\r\n        console.log(res);\r\n        const {data} = res\r\n        yield put(action.loadDataSagaSuccess(data))\r\n    } catch (err) {\r\n        yield put(action.loadDataSagaErr(err))\r\n        \r\n    }\r\n}\r\nfunction* wathGetDataSaga(){\r\n    yield all([\r\n        call(runClockSaga),\r\n        takeLatest(types.LOAD_DATASAGA, loadDataSaga)\r\n    ])\r\n}\r\nexport default wathGetDataSaga"]},"metadata":{},"sourceType":"module"}