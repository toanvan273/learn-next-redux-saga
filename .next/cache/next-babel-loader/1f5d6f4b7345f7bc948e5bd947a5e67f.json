{"ast":null,"code":"import * as types from '../action/types';\nimport { all, delay, put, take, takeLatest, call } from 'redux-saga/effects';\nimport { tickClock } from '../action/clockAction';\nimport Axios from 'axios';\nimport * as action from '../action/clockAction';\n\nfunction* runClockSaga() {\n  yield take(types.START_CLOCK); // while(true) {\n  //     yield put(tickClock(true))\n  //     yield delay(1000)\n  // }\n}\n\nfunction* loadDataSaga() {\n  try {\n    const res = yield Axios.get('https://jsonplaceholder.typicode.com/users');\n    console.log(res);\n    const {\n      data\n    } = res;\n    yield put(action.loadDataSagaSuccess(data));\n  } catch (err) {\n    yield put(action.loadDataSagaErr(err));\n  }\n}\n\nfunction* wathGetDataSaga() {\n  yield all([call(runClockSaga), takeLatest(types.LOAD_DATASAGA, loadDataSaga)]);\n}\n\nexport default wathGetDataSaga;","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/saga/clockSaga.js"],"names":["types","all","delay","put","take","takeLatest","call","tickClock","Axios","action","runClockSaga","START_CLOCK","loadDataSaga","res","get","console","log","data","loadDataSagaSuccess","err","loadDataSagaErr","wathGetDataSaga","LOAD_DATASAGA"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,iBAAvB;AACA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,UAA/B,EAA4CC,IAA5C,QAAuD,oBAAvD;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;;AAEA,UAAUC,YAAV,GAAwB;AACpB,QAAMN,IAAI,CAACJ,KAAK,CAACW,WAAP,CAAV,CADoB,CAEpB;AACA;AACA;AACA;AACH;;AACD,UAAUC,YAAV,GAAyB;AACrB,MAAI;AACA,UAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,4CAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,UAAM;AAACI,MAAAA;AAAD,QAASJ,GAAf;AACA,UAAMV,GAAG,CAACM,MAAM,CAACS,mBAAP,CAA2BD,IAA3B,CAAD,CAAT;AACH,GALD,CAKE,OAAOE,GAAP,EAAY;AACV,UAAMhB,GAAG,CAACM,MAAM,CAACW,eAAP,CAAuBD,GAAvB,CAAD,CAAT;AAEH;AACJ;;AACD,UAAUE,eAAV,GAA2B;AACvB,QAAMpB,GAAG,CAAC,CACNK,IAAI,CAACI,YAAD,CADE,EAENL,UAAU,CAACL,KAAK,CAACsB,aAAP,EAAsBV,YAAtB,CAFJ,CAAD,CAAT;AAIH;;AACD,eAAeS,eAAf","sourcesContent":["import * as types from '../action/types'\r\nimport {all, delay, put, take, takeLatest , call} from 'redux-saga/effects'\r\nimport {tickClock} from '../action/clockAction'\r\nimport Axios from 'axios'\r\nimport * as action from '../action/clockAction'\r\n\r\nfunction* runClockSaga(){\r\n    yield take(types.START_CLOCK)\r\n    // while(true) {\r\n    //     yield put(tickClock(true))\r\n    //     yield delay(1000)\r\n    // }\r\n}\r\nfunction* loadDataSaga() {\r\n    try {\r\n        const res = yield Axios.get('https://jsonplaceholder.typicode.com/users')\r\n        console.log(res);\r\n        const {data} = res\r\n        yield put(action.loadDataSagaSuccess(data))\r\n    } catch (err) {\r\n        yield put(action.loadDataSagaErr(err))\r\n        \r\n    }\r\n}\r\nfunction* wathGetDataSaga(){\r\n    yield all([\r\n        call(runClockSaga),\r\n        takeLatest(types.LOAD_DATASAGA, loadDataSaga)\r\n    ])\r\n}\r\nexport default wathGetDataSaga"]},"metadata":{},"sourceType":"module"}