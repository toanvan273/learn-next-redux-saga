{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUserSaga);\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport Axios from 'axios';\nimport { getUserAction, getUserErr } from '../action/testAction';\nimport * as types from '../action/types';\nimport { host } from '../host';\nvar apiGetUser = host + '/users'; // put = vs dispatch\n\nfunction getUserSaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function getUserSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return Axios.get(apiGetUser);\n\n        case 3:\n          res = _context.sent;\n          console.log(res); // const data = yield res.jon()\n\n          data = res.data;\n          _context.next = 8;\n          return put(getUserAction(data));\n\n        case 8:\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 15;\n          return put(getUserErr(_context.t0));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nexport default takeLatest(types.TEST_GET_METHOD, getUserSaga); //takeLatest:   chỉ cho phép một hàm xử lý có thể chạy tại một thời điểm","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/saga/testSaga.js"],"names":["getUserSaga","put","takeLatest","Axios","getUserAction","getUserErr","types","host","apiGetUser","get","res","console","log","data","TEST_GET_METHOD"],"mappings":";;;;yBAQUA,W;;AARV,SAAQC,GAAR,EAAaC,UAAb,QAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,aAAR,EAAuBC,UAAvB,QAAwC,sBAAxC;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,IAAMC,UAAU,GAAGD,IAAI,GAAG,QAA1B,C,CACA;;AACA,SAAUP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMG,KAAK,CAACM,GAAN,CAAUD,UAAV,CAAN;;AAFnB;AAEcE,UAAAA,GAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAHR,CAIQ;;AACOG,UAAAA,IALf,GAKuBH,GALvB,CAKeG,IALf;AAAA;AAMQ,iBAAMZ,GAAG,CAACG,aAAa,CAACS,IAAD,CAAd,CAAT;;AANR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQQF,UAAAA,OAAO,CAACC,GAAR;AARR;AASQ,iBAAMX,GAAG,CAACI,UAAU,aAAX,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAeH,UAAU,CAACI,KAAK,CAACQ,eAAP,EAAwBd,WAAxB,CAAzB,C,CAEA","sourcesContent":["import {put, takeLatest} from 'redux-saga/effects'\r\nimport Axios from 'axios'\r\n\r\nimport {getUserAction, getUserErr} from '../action/testAction'\r\nimport * as types from '../action/types'\r\nimport {host} from '../host'\r\nconst apiGetUser = host + '/users'\r\n// put = vs dispatch\r\nfunction* getUserSaga(){\r\n    try{\r\n        const res= yield Axios.get(apiGetUser)\r\n        console.log(res);\r\n        // const data = yield res.jon()\r\n        const {data} = res\r\n        yield put(getUserAction(data))\r\n    }catch(err){\r\n        console.log(err);\r\n        yield put(getUserErr(err))\r\n    }\r\n}\r\nexport default takeLatest(types.TEST_GET_METHOD, getUserSaga)\r\n\r\n//takeLatest:   chỉ cho phép một hàm xử lý có thể chạy tại một thời điểm "]},"metadata":{},"sourceType":"module"}