{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from '../action/types';\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  dataSaga: null\n};\nexport default function clockReducer(state = initialState, action) {\n  // console.log('action :', action);\n  switch (action.type) {\n    case types.TICK_CLOCK:\n      return _objectSpread({}, state, {}, {\n        lastUpdate: action.ts,\n        light: action.light\n      });\n\n    case types.LOAD_DATASAGA_SUCCESS:\n      return _objectSpread({}, state, {\n        dataSaga: action.data\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/reducer/clockReducer.js"],"names":["types","initialState","lastUpdate","light","dataSaga","clockReducer","state","action","type","TICK_CLOCK","ts","LOAD_DATASAGA_SUCCESS","data"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,iBAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CADK;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB;AAMA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGL,YAA9B,EAA4CM,MAA5C,EAAoD;AAC/D;AAEA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,KAAK,CAACS,UAAX;AACI,+BACOH,KADP,MAEO;AAAEJ,QAAAA,UAAU,EAAEK,MAAM,CAACG,EAArB;AAAyBP,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAvC,OAFP;;AAIJ,SAAKH,KAAK,CAACW,qBAAX;AACA,+BACOL,KADP;AAEIF,QAAAA,QAAQ,EAAEG,MAAM,CAACK;AAFrB;;AAIA;AACI,aAAON,KAAP;AAZR;AAcH","sourcesContent":["import * as types from '../action/types'\r\n\r\nconst initialState = {\r\n    lastUpdate: 0,\r\n    light: false,\r\n    dataSaga: null\r\n}\r\n\r\nexport default function clockReducer(state = initialState, action) {\r\n    // console.log('action :', action);\r\n\r\n    switch (action.type) {\r\n        case types.TICK_CLOCK:\r\n            return {\r\n                ...state,\r\n                ...{ lastUpdate: action.ts, light: action.light }\r\n            }\r\n        case types.LOAD_DATASAGA_SUCCESS: \r\n        return {\r\n            ...state,\r\n            dataSaga: action.data\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}