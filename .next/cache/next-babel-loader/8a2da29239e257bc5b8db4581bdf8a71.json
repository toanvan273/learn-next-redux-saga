{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducer/rootReducer';\nimport rootSaga from '../saga/rootSaga';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore(initialSate) {\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(rootReducer, initialSate, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/lib/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootReducer","rootSaga","bindMiddleware","middleware","require","composeWithDevTools","configureStore","initialSate","sagaMiddleware","store","sagaTask","run"],"mappings":";AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,UAAU,EAAI;AACjC,YAAyC;AAAA,mBACPC,OAAO,CAAC,0BAAD,CADA;AAAA,QAC9BC,mBAD8B,YAC9BA,mBAD8B;;AAErC,WAAOA,mBAAmB,CAACR,eAAe,MAAf,4BAAmBM,UAAnB,EAAD,CAA1B;AACH;;AACD,SAAON,eAAe,MAAf,4BAAmBM,UAAnB,EAAP;AACH,CAND;;AAOA,SAASG,cAAT,CAAwBC,WAAxB,EAAqC;AACjC,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AACA,MAAMU,KAAK,GAAGX,WAAW,CACrBE,WADqB,EAErBO,WAFqB,EAGrBL,cAAc,CAAC,CAACM,cAAD,CAAD,CAHO,CAAzB;AAKAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBV,QAAnB,CAAjB;AACA,SAAOQ,KAAP;AACH;;AACD,eAAeH,cAAf","sourcesContent":["import {applyMiddleware, createStore} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootReducer from '../reducer/rootReducer'\r\nimport rootSaga from '../saga/rootSaga'\r\n\r\nconst bindMiddleware = middleware => {\r\n    if(process.env.NODE_ENV !== 'production'){\r\n        const {composeWithDevTools} = require('redux-devtools-extension')\r\n        return composeWithDevTools(applyMiddleware(...middleware))\r\n    }\r\n    return applyMiddleware(...middleware)\r\n}\r\nfunction configureStore(initialSate) {\r\n    const sagaMiddleware = createSagaMiddleware()\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialSate,\r\n        bindMiddleware([sagaMiddleware])\r\n    )\r\n    store.sagaTask = sagaMiddleware.run(rootSaga)\r\n    return store\r\n}\r\nexport default configureStore"]},"metadata":{},"sourceType":"module"}