{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport Axios from 'axios';\nimport { getUserAction, getUserErr } from '../action/testAction';\nimport * as types from '../action/types';\nimport { host } from '../host';\nconst apiGetUser = host + '/users'; // put = vs dispatch\n\nfunction* getUserSaga() {\n  try {\n    const res = yield Axios.get(apiGetUser);\n    console.log(res); // const data = yield res.jon()\n\n    const {\n      data\n    } = res;\n    yield put(getUserAction(data));\n  } catch (err) {\n    console.log(err);\n    yield put(getUserErr(err));\n  }\n}\n\nexport default takeLatest(types.TEST_GET_METHOD, getUserSaga); //takeLatest:   chỉ cho phép một hàm xử lý có thể chạy tại một thời điểm","map":{"version":3,"sources":["C:/Users/toan.truong/Desktop/Custom/template-custom/saga/testSaga.js"],"names":["put","takeLatest","Axios","getUserAction","getUserErr","types","host","apiGetUser","getUserSaga","res","get","console","log","data","err","TEST_GET_METHOD"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,UAAb,QAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,aAAR,EAAuBC,UAAvB,QAAwC,sBAAxC;AACA,OAAO,KAAKC,KAAZ,MAAuB,iBAAvB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,MAAMC,UAAU,GAAGD,IAAI,GAAG,QAA1B,C,CACA;;AACA,UAAUE,WAAV,GAAuB;AACnB,MAAG;AACC,UAAMC,GAAG,GAAE,MAAMP,KAAK,CAACQ,GAAN,CAAUH,UAAV,CAAjB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAFD,CAGC;;AACA,UAAM;AAACI,MAAAA;AAAD,QAASJ,GAAf;AACA,UAAMT,GAAG,CAACG,aAAa,CAACU,IAAD,CAAd,CAAT;AACH,GAND,CAMC,OAAMC,GAAN,EAAU;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,UAAMd,GAAG,CAACI,UAAU,CAACU,GAAD,CAAX,CAAT;AACH;AACJ;;AACD,eAAeb,UAAU,CAACI,KAAK,CAACU,eAAP,EAAwBP,WAAxB,CAAzB,C,CAEA","sourcesContent":["import {put, takeLatest} from 'redux-saga/effects'\r\nimport Axios from 'axios'\r\n\r\nimport {getUserAction, getUserErr} from '../action/testAction'\r\nimport * as types from '../action/types'\r\nimport {host} from '../host'\r\nconst apiGetUser = host + '/users'\r\n// put = vs dispatch\r\nfunction* getUserSaga(){\r\n    try{\r\n        const res= yield Axios.get(apiGetUser)\r\n        console.log(res);\r\n        // const data = yield res.jon()\r\n        const {data} = res\r\n        yield put(getUserAction(data))\r\n    }catch(err){\r\n        console.log(err);\r\n        yield put(getUserErr(err))\r\n    }\r\n}\r\nexport default takeLatest(types.TEST_GET_METHOD, getUserSaga)\r\n\r\n//takeLatest:   chỉ cho phép một hàm xử lý có thể chạy tại một thời điểm "]},"metadata":{},"sourceType":"module"}